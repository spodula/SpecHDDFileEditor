TR-DOS (betadisk) disk format.
Note, use https://sinclair.wiki.zxnet.co.uk/wiki/TR-DOS_filesystem as a starting point.
 
Logical tracks for a drive with 2 heads, T0 = C0/H0,  T1=C0/H1, T2=C1/H0 ect...
Files are all sequential and cannot be stored in fragments meaning the ability to defrag the disk is essential.

Directory entries are from T0H0S0 to T0H0S7 inclusive. giving 128 possible directory entries. 
Logical Sector 8 contains the disk information block

There are always 16 sectors per track. 
Sectors are always 256 bytes 

Example disk: 
-----------------------------------------------------
Disk: testdisk 1264 sectors 40 tracks 16 sectors

basic program: "basic" line 300
  a$(array)
  b array(2,3)
  a for/next
  x int = 10
  r$ string "test string"
  
code: "code",30000,2000
character array: "cdata" data a$
numeric array: "ndata" data b


Line seem to occur after the file. 
11E0: 00 52 0b 00 74 65 73 74 20 73 74 72 69 6e 67|80 .R..test string.
11F0: AA 2c 01 20 13 5f 05 00 00 00 13 5f 05 00 00 00
         ^^^^^
| Marks EOF


Offset (dec)	Offest (hex)	Length (dec)	Description
0	0x00	8	Filename, padded with spaces. (If first byte is 0x01 then file is deleted.)
8	0x08	1	File type (extension)
9	0x09	2	File start address little-endian format
11	0x0b	2	File length in bytes
13	0x0c	1	File length in sectors
14	0x0e	1	Starting sector
15	0x0f	1	Starting (logical) track


NUMERIC array:
----------------------------------------------------------------------------------------
DIRENT:
6E 64 61 74  61 20 20 20  44 E1 5F 23  00 01 0B 01  ndata   D._#....
6E 64 61 74  61 20 20 20  "ndata   "
44                        "D"
E1 5F                     11100001 01011111
23 00                     23 - file size
01                        1 - sector long
0B                        11 - start sector
01                        01 - start track

Data same as a normal Speccy or +3 Array file.

CHARACTER array:
----------------------------------------------------------------------------------------
DIRENT:
63 64 61 74  61 20 20 20  44 A7 5F 37  00 01 0A 01  cdata   D._7....
63 64 61 74  61 20 20 20  "cdata   "
44                        "D"
A7 5F                     10100111 01011111
37 00                     37 - file size                    
01                        10 sectors
0A                        10 start sector
01                        10 Start track	
     
Data same as a normal Speccy or +3 Array file.

CODE file:
----------------------------------------------------------------------------------------
DIRENT:
63 6F 64 65  20 20 20 20  43 30 75 D0  07 08 02 01  code    C0u.....
63 6F 64 65  20 20 20 20  "code    "
43                        type "C"
30 75                     30000 - start address
D0 07                     2000 - file length
08                        8 sectors
02                        02 start sector
01                        01 start track

Data same as a normal Speccy or +3 Array file.

BASIC file:
-----------------------------------------------------------------------------------------
DIRENT: 
62 61 73 69  63 20 20 20  42 EF 01 68  01 02 00 01  basic   B..h....
62 61 73 69  63 20 20 20  "basic   "
42                        Type "B"
EF 01                     495 - Size inc Variables
68 01                     360 - start of Variables area
02                        2 sectors
00                        0 start sector
01                        1 start track

Note: The area used for the file length in all other file types is used for
the ptr to the start of the Variables area. The full file length is in the previous two bytes. 

Note: The file size also doesn't include the bytes after the file which is used to store the line no.
In the file below, the file should end at 01EF 

The start line seems to be two bytes after this at 11F1,2 ("size inc Variables"+2/3)
No idea if the rest of the data after this point means anything. 

00001000   00 0A 17 00  20 E9 61 24  28 31 30 0E  00 00 0A 00  .... .a$(10.....
00001010   00 2C 35 0E  00 00 05 00  00 29 0D 00  14 15 00 20  .,5......).....
00001020   E9 62 28 32  0E 00 00 02  00 00 2C 33  0E 00 00 03  .b(2......,3....
00001030   00 00 29 0D  00 1E 15 00  20 EB 61 3D  31 0E 00 00  ..)..... .a=1...
00001040   01 00 00 CC  31 30 0E 00  00 0A 00 00  0D 00 28 14  ....10........(.
00001050   00 20 F1 61  24 28 61 2C  33 0E 00 00  03 00 00 29  . .a$(a,3......)
00001060   3D 22 78 22  0D 00 32 14  00 20 F1 61  24 28 61 2C  ="x"..2.. .a$(a,
00001070   34 0E 00 00  04 00 00 29  3D 22 79 22  0D 00 3C 13  4......)="y"..<.
00001080   00 F1 61 24  28 61 2C 35  0E 00 00 05  00 00 29 3D  ..a$(a,5......)=
00001090   22 7A 22 0D  00 46 03 00  F3 61 0D 00  50 0C 00 F1  "z"..F...a..P...
000010A0   78 3D 31 30  0E 00 00 0A  00 00 0D 00  5A 12 00 F1  x=10........Z...
000010B0   72 24 3D 22  74 65 73 74  20 73 74 72  69 6E 67 22  r$="test string"
000010C0   0D 00 64 1E  00 F9 C0 31  35 36 31 39  0E 00 00 03  ..d....15619....
000010D0   3D 00 3A EA  3A F8 22 62  61 73 69 63  22 20 CA 33  =.:.:."basic" .3
000010E0   30 30 0D 00  6E 23 00 F9  C0 31 35 36  31 39 0E 00  00..n#...15619..
000010F0   00 03 3D 00  3A EA 3A F8  22 63 6F 64  65 22 AF 33  ..=.:.:."code".3
00001100   30 30 30 30  2C 32 30 30  30 0D 00 78  1E 00 F9 C0  0000,2000..x....
00001110   31 35 36 31  39 0E 00 00  03 3D 00 3A  EA 3A F8 22  15619....=.:.:."
00001120   63 64 61 74  61 22 E4 61  24 28 29 0D  00 82 1D 00  cdata".a$().....
00001130   F9 C0 31 35  36 31 39 0E  00 00 03 3D  00 3A EA 3A  ..15619....=.:.:
00001140   F8 22 6E 64  61 74 61 22  E4 62 28 29  0D 00 8C 17  ."ndata".b()....
00001150   00 EA F9 C0  31 35 36 31  39 3A EA 3A  D0 22 74 65  ....15619:.:."te
00001160   73 74 64 69  73 6B 22 0D  C1 37 00 02  0A 00 05 00  stdisk"..7......
00001170   20 20 78 79  7A 20 20 78  79 7A 20 20  78 79 7A 20    xyz  xyz  xyz
00001180   20 78 79 7A  20 20 78 79  7A 20 20 78  79 7A 20 20   xyz  xyz  xyz
00001190   78 79 7A 20  20 78 79 7A  20 20 78 79  7A 20 20 78  xyz  xyz  xyz  x
000011A0   79 7A 82 23  00 02 02 00  03 00 00 00  00 00 00 00  yz.#............
000011B0   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  ................
000011C0   00 00 00 00  00 00 00 00  E1 00 00 0B  00 00 00 00  ................
000011D0   0A 00 00 00  00 01 00 00  1E 00 02 78  00 00 0A 00  ...........x....
000011E0   00 52 0B 00  74 65 73 74  20 73 74 72  69 6E 67 80  .R..test string.
000011F0   AA 2C 01 20  13 5F 05 00  00 00 13 5F  05 00 00 00  .,. ._....._....
              ^^^^^---startline no


